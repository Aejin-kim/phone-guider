너는 MCP를 사용할 수 있어.
다음 예시들을 살펴보고 적절히 활용해줘.

Node.js & Git
{ "tool": "terminal", "parameters": { "cmd": "npm install express" } }
{ "tool": "terminal", "parameters": { "cmd": "node server.js" } }
{ "tool": "terminal", "parameters": { "cmd": "git clone [https://github.com/user/repo.git](https://github.com/user/repo.git)" } }

text-editor 사용 방법
{ "tool": "text-editor", "parameters": { "action": "replace", "file": "src/app.js", "startLine": 42, "endLine": 42, "newText": "console.log('bar');" } }
{ "tool": "text-editor", "parameters": { "action": "append", "file": "utils.py", "startLine": 120, "newText": "# helper fn\ndef slugify(text):\n    return text.lower().replace(' ', '-')\n" } }
{ "tool": "terminal", "parameters": { "cmd": "edit src/index.html line 15" } }
{ "tool": "terminal", "parameters": { "cmd": "list components" } }

파이썬 개발 도구
{ "tool": "terminal", "parameters": { "cmd": "python --version" } }
{ "tool": "terminal", "parameters": { "cmd": "pip install requests" } }
{ "tool": "terminal", "parameters": { "cmd": "pipx install black" } }
{ "tool": "terminal", "parameters": { "cmd": "pipenv install" } }
{ "tool": "terminal", "parameters": { "cmd": "poetry add numpy" } }
{ "tool": "terminal", "parameters": { "cmd": "pytest tests/" } }
{ "tool": "terminal", "parameters": { "cmd": "tox" } }
{ "tool": "terminal", "parameters": { "cmd": "flake8 src/" } }
{ "tool": "terminal", "parameters": { "cmd": "pylint module.py" } }
{ "tool": "terminal", "parameters": { "cmd": "black ." } }
{ "tool": "terminal", "parameters": { "cmd": "isort ." } }
{ "tool": "terminal", "parameters": { "cmd": "mypy app.py" } }
{ "tool": "terminal", "parameters": { "cmd": "coverage run -m pytest" } }
{ "tool": "terminal", "parameters": { "cmd": "python -m cProfile script.py" } }
{ "tool": "terminal", "parameters": { "cmd": "pyinstrument script.py" } }

기타 유틸리티
{ "tool": "terminal", "parameters": { "cmd": "ls -la" } }
{ "tool": "terminal", "parameters": { "cmd": "dir" } }

Playwright MCP Server 사용 예시
{ "tool":"playwright","parameters":{"action":"goto","url":"[https://example.com"}](https://example.com%22}) }
{ "tool":"playwright","parameters":{"action":"click","selector":"#login-button"} }
{ "tool":"playwright","parameters":{"action":"fill","selector":"input\[name='q']","text":"MCP Server"} }
{ "tool":"playwright","parameters":{"action":"press","selector":"input\[name='q']","key":"Enter"} }
{ "tool":"playwright","parameters":{"action":"screenshot","path":"search-results.png"} }
{ "tool":"playwright","parameters":{"action":"getConsoleLogs"} }
{ "tool":"playwright","parameters":{"action":"getNetworkRequests"} }
{ "tool":"playwright","parameters":{"action":"evaluate","expression":"document.title"} }
{ "tool":"playwright","parameters":{"action":"accessibilitySnapshot"} }
{ "tool": "context7", "parameters": {"query": "axios 최신 버전 알려줘"} }
{ "tool": "context7", "parameters": {"query": "lodash 사용법 예시"} }

"openai-gpt-image-mcp" 사용 방법
{
"tool": "create-image",
"parameters": {
"text": "일몰의 미래 도시 스카이라인",
"n": 1,
"size": "1024x1024",
"output_format": "png"
}
}

{
"tool": "edit-image",
"parameters": {
"images": ["/tmp/original.png"],
"prompt": "고양이 머리에 황금 후광 추가",
"mask": "/tmp/cat_mask.png",
"n": 1
}
}

다음 지침을 지켜줘.

1. 프로젝트 루트 폴더는 현재 폴더 야.
2. 너는 내가 조사하는 요청하는 자료를 웹을 통해 검색 후 이 폴더에 웹사이트 형태의 보고서처럼 만들어 주면 돼
3. index.html은 보고서형태의 웹사이트 메인 페이지가 되도록 해.
4. docs/project_phone.md 파일은 작업마다 반드시 업데이트해줘.
5. 꼭 필요한 파일만 읽고 편집 또는 추가해줘.
6. write 시 3~5개 섹션으로 나누어 작성, edit 시에도 순차적으로 1개씩.
7. docs 폴더는 꼭 필요한 내용만 담아 용량을 줄여줘.
8. 가장 먼저 project_plan.md를 작성하고 계속 업데이트해줘.
9. playwright 조사 시 DOM 구조 확인 후 클릭, 입력 등 수행.
11. 웹 검색은 google search로 하고 결과는 playwright로 조사.